name: Continuous Integration

on:
  push:
    paths:
      - '**.f90'
      - '**.fpp'
      - '**.py'
      - '**.yml'
      - 'mfc.sh'
      - 'golden.txt'
      - 'CMakeLists.txt'

  pull_request:

  workflow_dispatch:

jobs:
  github:
    name: (GitHub) Test Suite
    strategy:
      matrix:
        include:
          - os:  ubuntu-latest
            debug: --no-debug
            intel: false
          - os:  ubuntu-latest
            debug: --debug
            intel: false
          - os:  ubuntu-latest
            debug: --no-debug
            intel: true
          - os:  ubuntu-latest
            debug: --debug
            intel: true
          - os:  macos-latest
            debug: --no-debug
            gcc: 11
          - os:  macos-latest
            debug: --debug
            gcc: 11
    runs-on: ${{ matrix.os }}
    steps:
      - name: Clone
        uses: actions/checkout@v3

      - name: Setup MacOS
        if:   matrix.os == 'macos-latest'
        run: |
          echo "OMPI_FC=gfortran-${{ matrix.gcc }}" >> $GITHUB_ENV
          echo "OMPI_CXX=g++-${{ matrix.gcc }}"     >> $GITHUB_ENV
          echo "OMPI_MPICC=gcc-${{ matrix.gcc }}"   >> $GITHUB_ENV
          echo "CC=gcc-${{ matrix.gcc }}"           >> $GITHUB_ENV
          echo "CXX=g++-${{ matrix.gcc }}"          >> $GITHUB_ENV
          echo "FC=gfortran-${{ matrix.gcc }}"      >> $GITHUB_ENV
          brew install wget make python make cmake coreutils gcc@${{ matrix.gcc }}
          HOMEBREW_MAKE_JOBS=$(nproc) brew install --cc=gcc-${{ matrix.gcc }} --verbose --build-from-source open-mpi

      - name: Setup Ubuntu
        if:   matrix.os == 'ubuntu-latest' && matrix.intel == false
        run:  sudo apt install tar wget make cmake gcc g++ python3 python3-dev "openmpi-*" libopenmpi-dev

      - name: Setup Ubuntu (Intel)
        if:   matrix.os == 'ubuntu-latest' && matrix.intel == true
        uses: rscohn2/setup-oneapi@v0
        with:
          list: true
          components: |
            icx
            ifx
            impi
            mkl
      - name: Continue Setup (Intel)
        if:   matrix.os == 'ubuntu-latest' && matrix.intel == true
        run: |
          sudo apt install tar wget make cmake python3 python3-dev
          source /opt/intel/oneapi/setvars.sh
          echo "CXX=$(which icpx)"          >> $GITHUB_ENV
          echo "CC=$(which icx)"            >> $GITHUB_ENV
          echo "FC=$(which ifx)"          >> $GITHUB_ENV
          echo "OMPI_FC=$(which ifx)"     >> $GITHUB_ENV
          echo "OMPI_CXX=$(which icpx)"     >> $GITHUB_ENV
          echo "OMPI_MPICC=$(which icx)"    >> $GITHUB_ENV
          echo "MPI_HOME"=/opt/intel/oneapi/mpi/"    >> $GITHUB_ENV
          ls /opt/intel/oneapi/
          echo $GITHUB_ENV
          mpiicc --version
          mpiifort --version
       
      - name: Build
        run:  /bin/bash mfc.sh build -j $(nproc) ${{ matrix.debug }}

      - name: Test Suite (Debug)
        if: matrix.debug == '--debug'
        run:  /bin/bash mfc.sh test  -j $(nproc) -a --debug
        
      - name: Test Suite (No Debug)
        if: matrix.debug == '--no-debug'
        run:  /bin/bash mfc.sh test  -j $(nproc) -a 
        
#   self-gpu-debug:
#     name: (Self) Test Suite - GPU - debug
#     strategy:
#       matrix:
#         include:
#           - os: [self-hosted, wingtip]
#     runs-on: ${{ matrix.os }}
#     if: github.repository == 'MFlowCode/MFC'
#     steps:
#       - name: Clone
#         uses: actions/checkout@v3
          
#       - name: Setup
#         run:  echo "test"
        
#       - name: Build
#         run:  |
#           module use /opt/nvidia/hpc_sdk/modulefiles/
#           module load nvhpc
#           /bin/bash mfc.sh build -j 8 --gpu --debug

#       - name: Test Suite
#         run:  |
#           module use /opt/nvidia/hpc_sdk/modulefiles/
#           module load nvhpc
#           /bin/bash mfc.sh test -j 8 -b mpirun --gpu --debug

#   ice-gpu:
#     name: (COC-ICE) Test Suite - GPU
#     strategy:
#       matrix:
#         include:
#           - os: [self-hosted, cocice]
#     runs-on: ${{ matrix.os }}
#     if: github.repository == 'MFlowCode/MFC'
#     steps:
#       - name: Clone
#         uses: actions/checkout@v3
          
#       - name: Setup
#         run:  echo "test"
        
#       - name: Build
#         run:  |
#           module purge
#           module load nvhpc
#           /usr/bin/bash mfc.sh build -j 4 --gpu

#       - name: Test Suite
#         run:  |
#           qsub -I -q coc-ice-gpu -l nodes=1:ppn=8:gpus=2:teslav100
#           module purge
#           module load nvhpc
#           /usr/bin/bash mfc.sh test -j 4 -b mpirun --gpu -a
#           exit
